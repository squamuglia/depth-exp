{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","flickityReady","carousel","flkty","imagesLoaded","bind","prevProps","prevState","reloadOnUpdate","deactivate","selectedIndex","options","initialIndex","draggable","undefined","children","length","instance","activate","disableImagesLoaded","reloadCells","setState","flickityRef","mountNode","querySelector","createElement","elementType","className","ref","c","renderPortal","propTypes","bool","object","string","array","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n    this.imagesLoaded = this.imagesLoaded.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.reloadOnUpdate ||\n      (!prevState.flickityReady && this.state.flickityReady)\n    ) {\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = this.props.options.initialIndex || 0;\n      this.flkty.options.draggable =\n        this.props.options.draggable === undefined\n          ? this.props.children\n            ? this.props.children.length > 1\n            : false\n          : this.props.options.draggable;\n      imagesloaded(\n        this.carousel,\n        function(instance) {\n          this.flkty.activate();\n        }.bind(this)\n      );\n    }\n    this.imagesLoaded();\n  }\n\n  imagesLoaded() {\n    if (!this.props.disableImagesLoaded && canUseDOM) {\n      imagesloaded(\n        this.carousel,\n        function(instance) {\n          this.flkty.reloadCells();\n        }.bind(this)\n      );\n    }\n  }\n\n  componentDidMount() {\n    const carousel = this.carousel;\n    if (canUseDOM) {\n      this.flkty = new Flickity(carousel, this.props.options);\n      this.setState({ flickityReady: true });\n      if (this.props.flickityRef) {\n        this.props.flickityRef(this.flkty);\n      }\n    }\n  }\n\n  renderPortal() {\n    if (!this.carousel) {\n      return null;\n    }\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      return createPortal(this.props.children, mountNode);\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  reloadOnUpdate: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  flickityRef: PropTypes.func,\n};\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  reloadOnUpdate: false,\n  options: {},\n  className: '',\n  elementType: 'div',\n};\n\nexport default FlickityComponent;\n"]}